def compute_annualized_returns(self, period=21):
    """
    Compute rolling annualized returns.
    
    :param period: int, the lookback period for the rolling window
    :return: numpy array of shape (rows, cols) with annualized returns
    """
    rows, cols = self.close.shape
    out = np.zeros_like(self.close)
    
    for j in range(cols):
        for i in range(period, rows):
            # Calculate total return over the period
            total_return = self.close[i, j] / self.close[i - period, j] - 1
            
            # Annualize the return
            annualized_return = (1 + total_return) ** (self.periods_per_year / period) - 1
            
            out[i, j] = annualized_return

    return out